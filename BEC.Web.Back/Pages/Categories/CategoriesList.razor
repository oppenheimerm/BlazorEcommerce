@inject IViewCategoriesUseCase ViewCategoriesUsecase

@page "/categories/{PageNumber:int?}/{PageSize:int?}"
@page "/categories/"

<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h1 class="h2">Categories</h1>
    <br />
    <div class="btn-toolbar mb-2 mb-md-0">
        <div class="btn-group me-2">
            <button type="button" class="btn btn-primary btn-dark" @onclick="OnClickAddCategory">Add</button>
        </div>
    </div>
</div>

<br/>

<div class="table-responsive table-dark">
    <table class="table table-striped table-sm">
        <thead>
            <tr>
              <th scope="col">Id</th>
              <th scope="col">Code</th>
              <th scope="col">Title</th>
              <th scope="col"></th>
            </tr>
          </thead>
          <tbody>
            @foreach (var item in allCategories)
            {
                <tr>
                    <td>@item.Id</td>
                  <td>@item.CategoryCode</td>
                  <td>@item.Title</td>
                  <td>
                    <button type="button" class="btn btn-light">Edit</button>
                  </td>
                </tr>
            }
          </tbody>
	</table>

    <!-- Extract this to a seperate component -->
    <nav>        
        <ul class="pagination">
            <li class="page-item">
                <div class="page-link" href="#" aria-label="Previous" @onclick="PrevPageAsync">
                    <span aria-hidden="true">&laquo;</span>
                    <span class="sr-only">Previous</span>
                </div>
            </li>   
            @for (int i = UseCasePagingParameters.PageNumber - 3; i < UseCasePagingParameters.PageNumber + 3; i++)
            {
                // because of the way blazor watches variables
                /*
                    <a class="page-link" href="#" @onclick="() => ShowPagesAsync(UseCasePagingParameters.PageNumber)">
                    @i
                    </a>
                    @i will always be set the last value of "i", so we need a local variable

                    We we want to see the value of i we use the local variable j
                */
                int j = i;
                if(i > 0 && i <= TotalPages)
                {
                    //  Set active page
                    if(i == UseCasePagingParameters.PageNumber)
                    {
                        <li class="page-item active">
                            <span class="page-link" href="#" @onclick="() => ShowPagesAsync(j)">
                                <!-- use our local variable 'j' -->
                                @j
                            </span>
                        </li>
                    }
                    else
                    {
                    <li class="page-item">
                        <span class="page-link" href="#" @onclick="() => ShowPagesAsync(j)">
                            @j
                        </span>
                    </li>     
                    } 
                }
            }
            @if (UseCasePagingParameters.PageNumber >= TotalPages)
            {
                <li class="page-item">
                    <div class="page-link" href="#" aria-label="Next" @onclick="NextPageAsync">
                        <span aria-hidden="true">&raquo;</span>
                        <span class="sr-only">Next</span>
                    </div>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <div class="page-link" href="#" aria-label="Next">
                        <span aria-hidden="true">&raquo;</span>
                        <span class="sr-only">Next</span>
                    </div>
                </li>
            }
        </ul>
    </nav>
</div>

@code{

    //	Store list of categories
    


}